{
	"info": {
		"_postman_id": "69eb2a84-39e9-4337-97ba-017ccd73d212",
		"name": "Ex Mock API 16-06",
		"description": "Đây là project để ôn lại postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4182217"
	},
	"item": [
		{
			"name": "GetAllPost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200)",
							"})",
							"",
							"pm.test(\"Field namepost from reponse is string\", function () {",
							"    pm.expect(pm.response.json()[0].namepost).to.be.a(\"string\")",
							"})",
							"",
							"pm.test(\"Response time is less than 5000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.lessThan(5000)",
							"})",
							"",
							"pm.test(\"Print namepost in first object\", function () {",
							"    const response = pm.response.json();",
							"    console.log(response[0].namepost);",
							"})",
							"",
							"pm.test(\"Check namepost exist - Cách 2\", function(){",
							"    const responseData = pm.response.json();",
							"    const found = responseData.some(item => item.namepost === \"Laurie Braun\");",
							"    pm.expect(found).to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/post",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetPostById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response must have field namepost, image\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property(\"namepost\");",
							"    pm.expect(response).to.have.property(\"image\");",
							"})",
							"",
							"pm.test(\"Response must have include Thong\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response.namepost).to.include(\"Thong\");",
							"})",
							"",
							"pm.test(\"Test 1\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.all.keys(\"createdAt\", \"namepost\", \"image\", \"id\");",
							"    pm.expect(response).to.have.keys([\"createdAt\", \"namepost\", \"image\", \"id\"]);",
							"",
							"})",
							"",
							"pm.test(\"Json schema\", function () {",
							"    const schema = {",
							"        \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"        \"title\": \"Generated schema for Root\",",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"            \"createdAt\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"namepost\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"image\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"id\": {",
							"                \"type\": \"string\"",
							"            }",
							"        },",
							"        \"required\": [",
							"            \"createdAt\",",
							"            \"namepost\",",
							"            \"image\",",
							"            \"id\"",
							"        ]",
							"    }",
							"",
							"    const response = pm.response.json();",
							"    ",
							"    pm.expect(response).to.have.jsonSchema(schema);",
							"    pm.response.to.have.jsonSchema(schema);",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/post/:idpost",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"post",
						":idpost"
					],
					"variable": [
						{
							"key": "idpost",
							"value": "38"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreatePost",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"namepost\": \"Đây là post của Trinh Quoc Thong\",\n  \"image\": \"Link hình của Trịnh Quốc Thông\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/post",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdatePost",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"namepost\": \"Đây là post của Trinh Quoc Thong - Update\",\n  \"image\": \"Link hình của Trịnh Quốc Thông - Update\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/post/:idpost",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"post",
						":idpost"
					],
					"variable": [
						{
							"key": "idpost",
							"value": "38"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeletePost",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/post/:idpost",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"post",
						":idpost"
					],
					"variable": [
						{
							"key": "idpost",
							"value": "36"
						}
					]
				}
			},
			"response": []
		}
	]
}